{"version":3,"sources":["components/Header.js","components/LinkCard.js","components/CreateModal.js","index.js"],"names":["Header","SearchBar","setShow","Button","variant","onClick","LinkCard","name","id","url","comment","tags","date","count","updateClickCount","Date","Card","style","width","margin","className","ListGroup","Item","href","target","map","tag","join","getMonth","getDate","getFullYear","CreateModal","show","createLink","useState","setName","setUrl","setComment","setTags","handleClose","Modal","onHide","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","onChange","event","value","Footer","App","links","setLinks","useEffect","axios","get","then","res","data","console","log","catch","error","linkId","currentClickCount","patch","link","key","post","app","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.e8830201.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport {\n    SearchBar,\n} from './SearchBar';\n\nimport './Header.css';\n\nconst Header = ({\n    SearchBar,\n    setShow\n}) => {\n    const handleShow = () => setShow(true);\n\n    return (\n        <header>\n            <h1>Welcome to \"The Great Linkerator\"</h1>\n            <form>\n            <Button variant=\"primary\" onClick={ handleShow }>\n                Create Link\n            </Button>\n\n\n            </form>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\nimport './LinkCard.css';\n\nconst LinkCard = ({\n    name,\n    id,\n    url,\n    comment,\n    tags,\n    date,\n    count,\n    updateClickCount,\n}) => {\n\n    date = new Date(date);\n\n    return (\n        <Card style={{ width: '50rem', margin: '5px 0' }}>\n            <Card.Header className=\"link-header\">{ name }</Card.Header>\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item className=\"link-list-item\" onClick = {() => updateClickCount(id, count)}> <a href={ `https://${ url }` } target=\"_blank\">{ url }</a></ListGroup.Item>\n                    <ListGroup.Item className=\"link-list-item\">{ comment }</ListGroup.Item>\n                    <ListGroup.Item className=\"link-list-item\">{ tags ? \n                        tags.map(tag => {\n                            return tag.name;\n                        }).join(\", \") \n                        : \n                        \"\"\n                        }</ListGroup.Item>                    \n                        <ListGroup.Item className=\"link-list-item\">Link has been clicked { count } time(s) since { `${ date.getMonth() + 1 }/${ date.getDate() }/${ date.getFullYear() }` }</ListGroup.Item>\n                </ListGroup>\n            </Card>\n    )\n};\n\nexport default LinkCard;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ModalHeader from 'react-bootstrap/ModalHeader';\nimport ModalTitle from 'react-bootstrap/ModalTitle';\nimport ModalBody from 'react-bootstrap/ModalBody';\nimport ModalFooter from 'react-bootstrap/ModalFooter';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\n\n\nconst CreateModal = ({\n    show,\n    setShow,\n    createLink\n}) => {\n    const [ name, setName ] = useState(\"\");\n    const [ url, setUrl ] = useState(\"\");\n    const [ comment, setComment ] = useState(\"\");\n    const [ tags, setTags ] = useState(\"\");\n\n    const handleClose = () => setShow(false);\n\n    return (\n        <>\n            <Modal show={ show } onHide={ handleClose }>\n                <Modal.Header closeButton>\n                    <Modal.Title>Create a New Link</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Site Name:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Site Name\" onChange= { event => setName(event.target.value) } value={ name }/>\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\n                        <Form.Label>Site URL:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Site URL\" onChange= { event => setUrl(event.target.value) } value={ url }/>\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\n                        <Form.Label>Comment:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Site Comment\" onChange= { event => setComment(event.target.value) } value={ comment }/>\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlInput4\">\n                        <Form.Label>Tags:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"tags...\" onChange= { event => setTags(event.target.value) } value={ tags }/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={ handleClose }>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => createLink(name, url, comment, tags), handleClose }>\n                        Create Link\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default CreateModal;","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n    Header,\n    LinkCard,\n    CreateModal,\n} from './components';\n\nconst App = () => {\n    const [links, setLinks] = useState([]);\n    const [show, setShow] = useState(false);\n\n\n    useEffect(() => {\n        axios.get('/api/links')\n            .then(res => {\n            setLinks(res.data.links);\n                console.log(\"Set Links!!!\", res.data.links);\n            })\n            .catch((error) => {\n                console.error(\"Failed to fetch links.\", error);\n            });\n    }, []);\n\n    const updateClickCount = (linkId, currentClickCount) => {\n        axios.patch(`/api/links/${linkId}`, {\n            count:currentClickCount + 1\n        })\n            .then(res => {\n            console.log(\"<<<updateClick>>>\", linkId)\n            setLinks(links.map(link => {                \n                if (link.id === res.data.link.id) {\n                    return res.data.link;\n                } else {\n                    return link;\n                };\n            }))\n        }).catch((error) => {\n            console.error(\"Failed to update count\", error);\n        });\n    };\n\n    const createLink = (name, url, comment, tags, count, date) => {\n        axios.post(`/api/links` , {\n            name, url, comment, tags, count, date\n        })\n        .then(res => {\n            setLinks([ ...links, res.data ])\n        })\n            .catch((error) => {\n                console.error(\"Failed to create new link!\", error)\n            });\n    };\n\n    return (\n        <>\n            <Header \n            setShow={ setShow } />\n                {links.map(link =>{\n                    return <LinkCard key={link.id} {...link}\n                    updateClickCount = { updateClickCount }/>\n                })}\n            <CreateModal\n                show={ show }\n                setShow={ setShow }\n                createLink={ createLink } />\n        </>\n    );\n};\n\nconst app = document.querySelector('#app');\n\nReactDOM.render(\n    <App />, \n    app\n);"],"sourceRoot":""}