{"version":3,"sources":["components/Header.js","components/LinkCard.js","components/CreateModal.js","index.js"],"names":["Header","links","setShow","SearchBar","useState","setFilteredLinks","useEffect","Form","Group","controlId","Label","Control","as","custom","onChange","popLinks","sort","a","b","count","reverse","key","unpopLinks","value","Button","className","variant","onClick","LinkCard","name","id","url","comment","tags","date","updateClickCount","Date","Card","style","width","margin","ListGroup","Item","href","target","rel","map","tag","join","getMonth","getDate","getFullYear","CreateModal","show","createLink","setName","setUrl","setComment","setTags","handleClose","Modal","onHide","closeButton","Title","Body","type","placeholder","event","Footer","App","setLinks","axios","get","then","res","data","console","log","catch","error","linkId","currentClickCount","patch","link","post","app","document","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.ace2324b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nimport {\n    SearchBar,\n} from './SearchBar';\n\nimport './Header.css';\n\nconst Header = ({\n    links,\n    SearchBar,\n    setShow\n}) => {\n    const [filteredLinks, setFilteredLinks] = useState();\n\n    useEffect(() => {\n\n    });\n\n    const mostPopular = () => {\n        const popLinks = links.sort((a, b) => (a.count > b.count) ? 1 : -1).reverse();\n        setFilteredLinks(popLinks);\n    };\n\n    const leastPopular = () => {\n        const unpopLinks = links.sort((a, b) => (a.count > b.count) ? 1 : -1);\n        setFilteredLinks(unpopLinks);\n    };\n\n    const handleShow = () => setShow(true);\n\n\n    return (\n        <header>\n            <h1>Welcome to \"The Great Linkerator\"</h1>\n                    <Form>\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\n                            <Form.Label>Sort Links: </Form.Label>\n                            <Form.Control as=\"select\" custom>\n                                <option>[select]</option>\n                                <option onChange= { mostPopular } key=\"popular\">Most Popular</option>\n                                <option onChange={ leastPopular } key=\"unpopular\" value=\"unpopular\">Least Popular</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                <form>\n                    <Button className=\"create-link-button\" variant=\"primary\" onClick={ handleShow }>\n                        Create Link\n                    </Button>\n                </form>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\n\nimport './LinkCard.css';\n\nconst LinkCard = ({\n    name,\n    id,\n    url,\n    comment,\n    tags,\n    date,\n    count,\n    updateClickCount,\n}) => {\n\n    date = new Date(date);\n\n    return (\n        <Card style={{ width: '50rem', margin: '5px 0' }}>\n            <Card.Header className=\"link-header\">{ name }</Card.Header>\n                <ListGroup variant=\"flush\">\n                    <ListGroup.Item className=\"link-list-item\"> <a href={ `https://${ url }` } target=\"_blank\" rel=\"noopener noreferrer\"  onClick = {() => updateClickCount(id, count)}>{ url }</a></ListGroup.Item>\n                    <ListGroup.Item className=\"link-list-item\">{ comment }</ListGroup.Item>\n                    <ListGroup.Item className=\"link-list-item\">Tags: { tags ? \n                        tags.map(tag => {\n                            return tag.name;\n                        }).join(\", \") \n                        : \n                        \"\"\n                    }\n                    </ListGroup.Item>                    \n                    <ListGroup.Item className=\"link-list-item\">Link has been clicked { count } time(s) since { `${ date.getMonth() + 1 }/${ date.getDate() }/${ date.getFullYear() }` }\n                    <Button className=\"update-button\" variant=\"primary\" \n                    // onClick={}\n                    >\n                        Update\n                    </Button>\n                    </ListGroup.Item>\n                </ListGroup>\n        </Card>\n    )\n};\n\nexport default LinkCard;","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\n\nimport './CreateModal.css';\n\n\nconst CreateModal = ({\n    show,\n    setShow,\n    createLink\n}) => {\n    const [ name, setName ] = useState(\"\");\n    const [ url, setUrl ] = useState(\"\");\n    const [ comment, setComment ] = useState(\"\");\n    const [ tags, setTags ] = useState(\"\");\n\n    const handleClose = () => setShow(false);\n\n    return (\n        <>\n            <Modal show={ show } onHide={ handleClose }>\n                <Modal.Header className=\"modal-header\" closeButton>\n                    <Modal.Title>Create a New Link</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Site Name:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Site Name\" onChange= { event => setName(event.target.value) } value={ name }/>\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlInput2\">\n                        <Form.Label>Site URL:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Site URL\" onChange= { event => setUrl(event.target.value) } value={ url }/>\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlInput3\">\n                        <Form.Label>Comment:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Site Comment\" onChange= { event => setComment(event.target.value) } value={ comment }/>\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlInput4\">\n                        <Form.Label>Tags:</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"tags...\" onChange= { event => setTags(event.target.value) } value={ tags }/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={ handleClose }>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => {\n                                                createLink({name, url, comment, tags});\n                                                handleClose();\n                    }\n                    }>\n                        Create Link\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default CreateModal;","import React, { useEffect, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n    Header,\n    LinkCard,\n    CreateModal,\n} from './components';\n\nconst App = () => {\n    const [links, setLinks] = useState([]);\n    const [show, setShow] = useState(false);\n    const [filteredLinks, setFilteredLinks] = useState([]);\n\n\n    useEffect(() => {\n        axios.get('/api/links')\n            .then(res => {\n            setLinks(res.data.links);\n                console.log(\"Set Links!!!\", res.data.links);\n            })\n            .catch((error) => {\n                console.error(\"Failed to fetch links.\", error);\n            });\n    }, []);\n\n    const updateClickCount = (linkId, currentClickCount) => {\n        axios.patch(`/api/links/${linkId}`, {\n            count:currentClickCount + 1\n        })\n            .then(res => {\n            console.log(\"<<<updateClick>>>\", linkId)\n            setLinks(links.map(link => {                \n                if (link.id === res.data.link.id) {\n                    return res.data.link;\n                } else {\n                    return link;\n                };\n            }))\n        }).catch((error) => {\n            console.error(\"Failed to update count\", error);\n        });\n    };\n\n    const createLink = ({name, url, comment, tags, count, date}) => {\n        console.log(\"createLink being called!!!!\")\n        axios.post(`/api/links` , {\n            name, url, comment, tags, count, date\n        })\n        .then(res => {\n            console.log(\"NEW LINK!!!\", res.data);\n            setLinks([ ...links, res.data.link ])\n        })\n            .catch((error) => {\n                console.error(\"Failed to create new link!\", error)\n            });\n    };\n\n    return (\n        <>\n            <Header\n            // mostPopular={ mostPopular }\n            // leastPopular={ leastPopular }\n            setShow={ setShow } />\n                {links.map(link =>{\n                    return <LinkCard key={link.id} {...link}\n                    updateClickCount = { updateClickCount }/>\n                })}\n            <CreateModal\n                show={ show }\n                setShow={ setShow }\n                createLink={ createLink } />\n        </>\n    );\n};\n\nconst app = document.querySelector('#app');\n\nReactDOM.render(\n    <App />, \n    app\n);"],"sourceRoot":""}